imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallback: "%locale%" }
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection:
        enabled: false
    validation:
        api: 2.4
        enable_annotations: false
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale: "%locale%"
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        default_entity_manager:         default
        auto_generate_proxy_classes:    "%kernel.debug%"

        entity_managers:
            default:
                connection:         default
                naming_strategy:    doctrine.orm.naming_strategy.underscore
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true
                mappings:
                    # bundles
                    FOSUserBundle:      ~
                    ViettutUserBundle:  ~
                    ViettutAdminApiBundle: ~
                    ViettutUserSystemAdminBundle:  ~
                    ViettutUserSystemLecturerBundle:  ~
                    # custom
                    CoreEntities:
                        type:       yml
                        dir:        %kernel.root_dir%/../src/Viettut/Resources/config/doctrine/Core
                        prefix:     Viettut\Entity\Core
                        alias:      ViettutCoreEntity
                        is_bundle:  false

# Swiftmailer Configuration
swiftmailer:
    transport:  "%mailer_transport%"
    host:       "%mailer_host%"
    username:   "%mailer_user%"
    password:   "%mailer_password%"
    port :      "%mailer_port%"
    encryption: ssl
    auth_mode:  login
    spool:      { type: memory }

# REST API
######################################################

# User system configuration

viettut_user_system_admin:
    # we don't want to do any request matching to our user types, so we use a request matcher that never
    # matches any requests. The bundle doesn't have an option to disable request matching.
    request_matcher: viettut_user.request.user_system.request_matcher
    # firewall_name isn't really used. FosUserBundle uses it to automatically login a user after registration
    # however our application is a stateless api so it doesn't apply
    # just doing this here for completeness
    firewall_name: api

viettut_user_system_lecturer:
    request_matcher: viettut_user.request.user_system.request_matcher
    firewall_name: api
    resetting:
        token_ttl: 86400
        email:
            from_email:
                address:        "%mailer_sender%"
                sender_name:    "%mailer_sender_name%"
        template:
            email: ViettutApiBundle:Resetting:email.txt.twig


######################################################


jms_serializer:
    metadata:
        directories:
            viettut:
                namespace_prefix:   "Viettut\\"
                path:               %kernel.root_dir%/../src/Viettut/Resources/config/serializer

            FOSUserBundle:
                namespace_prefix: "FOS\\UserBundle"
                path: "@ViettutUserBundle/Resources/config/serializer/fos"

fos_rest:
    serializer:
        serialize_null: true

    routing_loader:
        default_format: json
        include_format: false

    body_listener:              true
    param_fetcher_listener:     true

    format_listener:
        rules:
            - { path: '^/api/', fallback_format: json, prefer_extension: false, priorities: ['json', 'xml'] }
            - { path: '^/', priorities: [ 'html', '*/*'], fallback_format: json, prefer_extension: false }

    access_denied_listener:
        json:   true
        xml:    true
        html:   true

    view:
        view_response_listener: force
        formats:
            json:   true
            xml:    true
        templating_formats:
            html:   true

    exception:
        codes:
            'Viettut\Exception\InvalidUserRoleException': 400
            'Viettut\Exception\InvalidArgumentException': 400
            'Viettut\Exception\LogicException': 400

lexik_jwt_authentication:
    private_key_path: %kernel.root_dir%/var/jwt/private.pem   # ssh private key path
    public_key_path:  %kernel.root_dir%/var/jwt/public.pem    # ssh public key path
    pass_phrase:      '12345678'                      # ssh key pass phrase
    token_ttl:        86400

nelmio_cors:
    defaults:
        allow_origin:   ['*']
        allow_headers:  ['authorization', 'content-type']
        max_age:        3600
    paths:
        '^/api/':
            allow_methods: ['POST', 'PUT', 'PATCH', 'GET', 'DELETE']

stof_doctrine_extensions:
    orm:
        default:
            timestampable: true
            softdeleteable: true

sensio_framework_extra:
    view:
        annotations: false

gfreeau_custom_validation_path:
    directories:
        -
            path:       %kernel.root_dir%/../src/Viettut/Resources/config/validation
            type:       yml
            recursive:  true

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template


hwi_oauth:
    resource_owners:
        any_name:
            type: facebook
            client_id: 529276757135612
            client_secret: 0fe34b757c10440e7259665a53dda55a
            options:
                csrf: true

parameters:
    jms_serializer.json_serialization_visitor.class: Viettut\Behaviors\JsonSerializationVisitor